# $ZDOTDIR/.zimrc ‚Äî module configuration for zimfw (grouped, gated via per-module options)
#
# ---------------------------------------------------------------------------
# NOTE: After edits, run: `zimfw update && zimfw install && zimfw clean`
# ---------------------------------------------------------------------------

# Central cache dir for plugins that use $ZSH_CACHE_DIR
export ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/zsh"

export MACOS_OSTYPE=darwin21.3.0

################################################################################
# 1) Core UX (lightweight, safe defaults)
################################################################################

zmodule input                   # sane keybindings
zmodule termtitle               # pre-set styles in .zshrc pre-init

# üö´ zmodule environment       # stale; inlined sane defaults in shell_customizations.d

################################################################################
# 2) Prompt
################################################################################

zmodule romkatv/powerlevel10k --use degit   # p10k includes duration + gitstatus
zmodule prompt-pwd                          # cwd formatter for prompts

################################################################################
# 3) Completion (order matters)
################################################################################

zmodule zsh-users/zsh-completions --fpath src
zmodule completion

# fzf core + enhanced tab completion
zmodule fzf --if-command fzf
zmodule Aloxaf/fzf-tab --if-command fzf         # optional; disable if conflicts

################################################################################
# 4) macOS-specific
################################################################################

zmodule ohmyzsh/ohmyzsh --root plugins/brew #  --if-command brew

zmodule pndurette/zsh-lux --if-ostype $MACOS_OSTYPE                       # macOS light/dark detection
zmodule eventi/noreallyjustfuckingstopalready --if-ostype $MACOS_OSTYPE  # macOS DNS reset helpers
zmodule ohmyzsh/ohmyzsh --root plugins/macos --if-ostype $MACOS_OSTYPE    # macOS utilities
zmodule ohmyzsh/ohmyzsh --root plugins/keychain --if-ostype $MACOS_OSTYPE

# zmodule sorin-ionescu/prezto --root modules/spectrum --if-ostype $MACOS_OSTYPE  # optional color swatches

################################################################################
# 5) Sysadmin, secrets, helpers
################################################################################

zmodule utility                                                 # ‚ö†Ô∏è may churn ls/grep/less aliases
zmodule exa --if-command eza    # note exa/eza overlap          # ‚ö†Ô∏è may churn ls aliases
zmodule unixorn/1password-op.plugin.zsh --if-command op
zmodule skx/sysadmin-util

################################################################################
# 6) DevOps / Cloud + Language / Tooling
################################################################################

# zmodule joke/zim-mise # --if-command mise   # mise version manager

# üö´ zmodule ruby --if-command ruby # disable due to low value
zmodule unixorn/rake-completion.zshplugin --if-command ruby

zmodule ohmyzsh/ohmyzsh --root plugins/ansible --if-command ansible
zmodule ohmyzsh/ohmyzsh --root plugins/aws --if-command aws
zmodule ohmyzsh/ohmyzsh --root plugins/azure --if-command az
# zmodule ohmyzsh/ohmyzsh --root plugins/docker --if-command docker
# zmodule ohmyzsh/ohmyzsh --root plugins/docker-compose --if-command docker
zmodule ohmyzsh/ohmyzsh --root plugins/helm --if-command helm
zmodule ohmyzsh/ohmyzsh --root plugins/terraform --if-command terraform
zmodule joke/zim-kubectl --if-command kubectl

################################################################################
# 7) Git / GitHub tooling
################################################################################

# zmodule ohmyzsh/ohmyzsh --root plugins/git-extras --if-command git   # choose one
# zmodule unixorn/git-extra-commands --if-command git

zmodule wfxr/forgit --if-command git --if-command fzf                 # fzf-powered git ops
# zmodule ohmyzsh/ohmyzsh --root plugins/gh --if-command gh            # gh CLI helpers

################################################################################
# 8) UX add-ons
################################################################################

zmodule zdharma-continuum/history-search-multi-word  # multi-word history search
zmodule MichaelAquilina/zsh-auto-notify             # desktop notifications for long cmds

################################################################################
# 9) Last to initialize (must be at the end)
################################################################################

# zmodule direnv --if-command direnv                                   # per-dir env - last because zsh needs to be ready.
zmodule zsh-users/zsh-syntax-highlighting                            # after completion
zmodule zsh-users/zsh-history-substring-search                       # after highlighting
zmodule zsh-users/zsh-autosuggestions                                # after autosuggest

#  vim: set ft=zsh ts=2 sw=2 tw=0 et :
# ---------------------------------------------------------------------------
#  END .zimrc
# ---------------------------------------------------------------------------
